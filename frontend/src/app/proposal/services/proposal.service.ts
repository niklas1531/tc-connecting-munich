import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { environment } from '../../environments/environment';
import { IGlossary } from '../interfaces/glossary';
import { autoGeneratedProposalParts } from '../interfaces/proposal';
import { IProposal } from './../interfaces/proposal';

@Injectable({
  providedIn: 'root',
})
export class ProposalService {
  constructor(private readonly http: HttpClient) {}

  public getProposals(): Observable<IProposal[]> {
    return this.http.get<IProposal[]>(environment.apiUrl + '/proposals');
  }

  public getProposalById(id: number): Observable<IProposal> {
    return this.http.get<IProposal>(environment.apiUrl + `/proposals/${id}`);
  }

  public generateSummary(
    file: FormData
  ): Observable<autoGeneratedProposalParts> {
    return this.http.post<autoGeneratedProposalParts>(
      environment.apiUrl + '/generateSummary',
      file
    );
  }

  public createProposal(
    proposal: IProposal,
    file: FormData
  ): Observable<IProposal> {
    return this.http.post<IProposal>(
      environment.apiUrl + '/createProposal',
      proposal
    );
  }

  public linkGlossariesToProposal(
    proposal_id: string,
    glossaries: IGlossary[]
  ): Observable<void> {
    return this.http.post<void>(
      environment.apiUrl + `/linkGlossariesToProposal/${proposal_id}`,
      glossaries
    );
  }
  public uploadProposalFile(
    proposal_id: string,
    file: FormData
  ): Observable<void> {
    return this.http.post<void>(
      environment.apiUrl + `/uploadProposalFile/${proposal_id}`,
      file
    );
  }
}
