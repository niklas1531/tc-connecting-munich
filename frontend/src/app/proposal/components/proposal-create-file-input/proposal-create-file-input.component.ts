import { Component, Input } from '@angular/core';
import { Select, Store } from '@ngxs/store';
import { filter, finalize, Observable, tap } from 'rxjs';
import { SharedModule } from '../../../shared/shared.module';
import { autoGeneratedProposalParts } from '../../interfaces/proposal';
import { ProposalCreateOperations } from '../../operations/proposal-create.operations';
import { generateSummary } from '../../states/proposal-overview.actions';
import { ProposalState } from '../../states/proposal-overview.state';
import { ContentFormGroup, DetailsFormGroup } from '../proposal-create.types';

@Component({
  selector: 'app-proposal-create-file-input',
  standalone: true,
  imports: [SharedModule],
  templateUrl: './proposal-create-file-input.component.html',
  styleUrl: './proposal-create-file-input.component.scss',
})
export class ProposalCreateFileInputComponent {
  @Input() fileFormGroup;
  @Input() contentFormGroup: ContentFormGroup;
  @Input() detailsFormGroup: DetailsFormGroup;
  @Input() contactsFormGroup;
  @Select(ProposalState.inCreationProposal)
  inCreationProposal$!: Observable<autoGeneratedProposalParts>;
  loading = false;
  constructor(private readonly store: Store) {}

  public uploadProposalFile(event: Event): void {
    const input = event.target as HTMLInputElement;
    if (input.files && input.files.length > 0) {
      const file = input.files[0];
      const formData: FormData = new FormData();
      formData.append('file', file, file.name);
      this.loading = true;
      this.store
        .dispatch(new generateSummary({ file: formData, fileF: file }))
        .pipe(
          tap(
            () => (
              this.setFormGroupValues(),
              ProposalCreateOperations.patchFileFormGroup(
                file,
                this.fileFormGroup
              )
            )
          ),
          finalize(() => (this.loading = false))
        )
        .subscribe();
    }
  }

  private setFormGroupValues() {
    this.inCreationProposal$
      .pipe(
        filter((file) => !!file),
        tap((file) => {
          ProposalCreateOperations.patchContentFormGroup(
            file,
            this.contentFormGroup
          );
        }),
        tap((file) =>
          ProposalCreateOperations.patchDetailsFormGroup(
            file,
            this.detailsFormGroup
          )
        )
      )
      .subscribe();
  }
}
